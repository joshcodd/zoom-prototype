{"version":3,"sources":["components/QuestionMessage/QuestionMessage.js","components/GeneralMessage/GeneralMessage.js","components/Chat/Chat.js","components/ToolBar/ToolBar.js","components/HostWindow/HostWindow.js","components/TopQuestions/TopQuestions.js","components/Gallery/Gallery.js","components/StudentApp/StudentApp.js","components/HomeScreen/HomeScreen.js","components/App/App.js","index.js"],"names":["QuestionMessage","props","timestamp","message","db","date","createdAt","hoursZero","toDate","getHours","minutesZero","getMinutes","toDateString","className","name","text","onClick","id","collection","doc","update","votes","firebase","firestore","FieldValue","increment","icon","faArrowAltCircleUp","color","faArrowAltCircleDown","GeneralMessage","Chat","useState","input","setInput","messages","setMessages","startingChat","chatState","setChatState","setName","removeActiveColours","prevButton","document","getElementById","style","backgroundColor","handleChatChange","state","useEffect","selectedButton","setActiveColours","hideChat","orderBy","onSnapshot","querySnapshot","data","docs","map","setTimeout","scrollDown","scrollTop","scrollHeight","onChange","event","target","value","placeholder","rows","add","serverTimestamp","read","type","displayName","ToolBar","showMenu","setShowMenu","view","dictateAt","src","process","alt","visibility","setHideChat","setDictateAt","min","max","setHome","HostWindow","TopQuestions","time","Date","topQuestions","setTopQuestions","getTime","lastSpeech","setLastSpeech","speak","useSpeechSynthesis","topThree","slice","length","reverse","i","Math","question","timeDiff","index","faVolumeUp","delete","faTimes","Gallery","faChevronDown","faChevronUp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","StudentApp","HomeScreen","home","setView","handleViewerButton","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7c968d79.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"./QuestionMessage.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faArrowAltCircleUp,\n  faArrowAltCircleDown,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction QuestionMessage(props) {\n  const message = props.message;\n  const db = props.db;\n  let timestamp;\n\n  let date = message.createdAt;\n  if (date !== null) {\n    date = date.toDate();\n    const hoursZero = date.getHours() > 9 ? \"\" : \"0\";\n    const minutesZero = date.getMinutes() > 9 ? \"\" : \"0\";\n    timestamp = `${hoursZero}${date.getHours()}:${minutesZero}${date.getMinutes()} ${date.toDateString()}`;\n  }\n\n  function handleVoteUp(id) {\n    if (db) {\n      db.collection(\"message\")\n        .doc(id)\n        .update({ votes: firebase.firestore.FieldValue.increment(1) });\n    }\n  }\n\n  function handleVoteDown(id) {\n    if (db) {\n      db.collection(\"message\")\n        .doc(id)\n        .update({ votes: firebase.firestore.FieldValue.increment(-1) });\n    }\n  }\n\n  return (\n    <li key={message.id} className=\"message\">\n      <div>{message.name}</div>\n      <div>{timestamp}</div>\n      <div className=\"text\">{message.text}</div>\n      <div className=\"arrows\">\n        <button\n          className=\"up button\"\n          onClick={() => handleVoteUp(message.id)}\n          id={message.id}\n        >\n          <i>\n            <FontAwesomeIcon\n              icon={faArrowAltCircleUp}\n              className=\"arrowIcon\"\n              color=\"#25D959\"\n            />\n          </i>\n        </button>\n        <button\n          className=\"up button\"\n          onClick={() => handleVoteDown(message.id)}\n          id={message.id}\n        >\n          <i>\n            <FontAwesomeIcon\n              icon={faArrowAltCircleDown}\n              className=\"arrowIcon\"\n              color=\"#25D959\"\n            />\n          </i>\n        </button>\n        <div className=\"votes\">{message.votes}</div>\n      </div>\n    </li>\n  );\n}\n\nexport default QuestionMessage;\n","import \"./GeneralMessage.css\";\n\nfunction GeneralMessage(props) {\n  const message = props.message;\n  let date = message.createdAt;\n  let timestamp;\n\n  if (date !== null) {\n    date = date.toDate();\n    const hoursZero = date.getHours() > 9 ? \"\" : \"0\";\n    const minutesZero = date.getMinutes() > 9 ? \"\" : \"0\";\n    timestamp = `${hoursZero}${date.getHours()}:${minutesZero}${date.getMinutes()} ${date.toDateString()}`;\n  }\n  return (\n    <li key={message.id} className=\"generalmessage\">\n      <div>{message.name}</div>\n      <div> {timestamp}</div>\n      <div className=\"text\">{message.text}</div>\n    </li>\n  );\n}\n\nexport default GeneralMessage;\n","import \"./Chat.css\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport { useState, useEffect } from \"react\";\nimport QuestionMessage from \"../QuestionMessage/QuestionMessage\";\nimport GeneralMessage from \"../GeneralMessage/GeneralMessage\";\n\nfunction Chat(props) {\n  let db = props.db;\n  let [input, setInput] = useState(\"\");\n  let [messages, setMessages] = useState([]);\n  let [chatState, setChatState] = useState(props.startingChat);\n  let [name, setName] = useState(props.name);\n\n  useEffect(() => {\n    let selectedButton;\n    if (!props.hideChat) {\n      selectedButton = chatState;\n    } else {\n      selectedButton = \"questions\";\n    }\n    setActiveColours(selectedButton);\n  }, [chatState, props.hideChat]);\n\n  useEffect(() => {\n    if (!props.hideChat) {\n      removeActiveColours(\"general\");\n    }\n    setChatState(\"questions\");\n  }, [props.hideChat]);\n\n  useEffect(() => {\n    if (db) {\n      if (chatState === \"questions\") {\n        const unsub = db\n          .collection(\"message\")\n          .orderBy(\"createdAt\")\n          .onSnapshot((querySnapshot) => {\n            const data = querySnapshot.docs.map((doc) => ({\n              ...doc.data(),\n              id: doc.id,\n            }));\n            setMessages(data);\n          });\n        return unsub;\n      } else {\n        const unsub = db\n          .collection(\"general\")\n          .orderBy(\"createdAt\")\n          .onSnapshot((querySnapshot) => {\n            const data = querySnapshot.docs.map((doc) => ({\n              ...doc.data(),\n              id: doc.id,\n            }));\n            setMessages(data);\n          });\n        return unsub;\n      }\n    }\n  }, [db, chatState]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      let scrollDown = document.getElementById(\"messages\");\n      scrollDown.scrollTop = scrollDown.scrollHeight;\n    }, 300);\n  }, [messages]);\n\n  function handleAnonymousClick(event) {\n    let displayName;\n    if (event.target.value === props.name) {\n      displayName = \"Anonymous\";\n    } else {\n      displayName = props.name;\n    }\n    setName(displayName);\n  }\n\n  function handleMessageChange(event) {\n    let message = event.target.value;\n    setInput(message);\n  }\n\n  function setActiveColours(id) {\n    const selectedButton = document.getElementById(id).style;\n    selectedButton.backgroundColor = \"#e2e2e2\";\n    selectedButton.color = \"#222222\";\n  }\n\n  function removeActiveColours(id) {\n    const prevButton = document.getElementById(id).style;\n    prevButton.backgroundColor = \"#222222\";\n    prevButton.color = \"#e2e2e2\";\n  }\n\n  function handleSubmit() {\n    if (db) {\n      if (chatState === \"questions\") {\n        db.collection(\"message\").add({\n          createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n          text: input,\n          votes: 0,\n          name: name,\n          read: false,\n        });\n      } else {\n        db.collection(\"general\").add({\n          createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n          text: input,\n          name: name,\n        });\n      }\n    }\n    setInput(\"\");\n  }\n\n  function handleChatChange(state) {\n    const prevState = chatState;\n    if (prevState !== state && prevState) {\n      removeActiveColours(prevState);\n      setChatState(state);\n    }\n  }\n\n  return (\n    <div className=\"chat\">\n      {props.hideChat ? (\n        <div className=\"splitButton\">\n          <button id=\"questions\" className=\"singleButton\">\n            Questions\n          </button>\n        </div>\n      ) : (\n        <div className=\"splitButton\">\n          <button\n            className=\"leftButton\"\n            id=\"general\"\n            onClick={() => handleChatChange(\"general\")}\n          >\n            General\n          </button>\n          <button\n            className=\"rightButton\"\n            id=\"questions\"\n            onClick={() => handleChatChange(\"questions\")}\n          >\n            Questions\n          </button>\n        </div>\n      )}\n\n      <div className=\"messages\" id=\"messages\">\n        <ul className=\"message-list\">\n          {messages.map((message) => {\n            if (chatState === \"questions\") {\n              return <QuestionMessage message={message} db={db} />;\n            } else {\n              return <GeneralMessage message={message} />;\n            }\n          })}\n        </ul>\n      </div>\n\n      <div className=\"inputArea\">\n        <textarea\n          onChange={handleMessageChange}\n          placeholder=\"Type your message here...\"\n          className=\"input\"\n          name=\"inputArea\"\n          rows=\"2\"\n          value={input}\n        ></textarea>\n\n        <div className=\"inputdialog\">\n          <button className=\"sendButton\" onClick={handleSubmit}>\n            Send\n          </button>\n          {chatState === \"questions\" && (\n            <div className=\"isAnonymous\">\n              <input\n                className=\"checkbox\"\n                type=\"checkbox\"\n                id=\"anonymous\"\n                value={name}\n                onClick={handleAnonymousClick}\n              />\n              <label>Post anonymously?</label>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n","import { useState } from \"react\";\nimport \"./ToolBar.css\";\n\nfunction ToolBar(props) {\n  const [showMenu, setShowMenu] = useState(false);\n  let view = props.view;\n  let dictateAt = props.dictateAt;\n\n  function handleMoreClick() {\n    setShowMenu(!showMenu);\n  }\n\n  function handleChatHideClick() {\n    props.setHideChat(!props.hideChat);\n  }\n\n  function handleLeaveClick() {\n    props.setHome(true);\n  }\n\n  function handleSpeechNumber(event) {\n    props.setDictateAt(event.target.value);\n  }\n\n  return (\n    <div className=\"toolbar\">\n      <img\n        src={process.env.PUBLIC_URL + \"/mute.png\"}\n        className=\"icon left\"\n        alt=\"Alternative Text\"\n      />\n      <img\n        src={process.env.PUBLIC_URL + \"/video.png\"}\n        className=\"icon left\"\n        alt=\"Alternative Text\"\n      />\n\n      {view === \"student\" && (\n        <div\n          className=\"menuDialog centre\"\n          style={{ visibility: showMenu ? \"visible\" : \"hidden\" }}\n        >\n          <div className=\"settings\">\n            <button className=\"chatStateButton\" onClick={handleChatHideClick}>\n              Turn chat {props.hideChat ? \"on\" : \"off\"}.\n            </button>\n          </div>\n        </div>\n      )}\n\n      {view === \"host\" && (\n        <div\n          className=\"hostMenuDialog centre\"\n          style={{ visibility: showMenu ? \"visible\" : \"hidden\" }}\n        >\n          <div className=\"hostSettings\">\n            <label className=\"dictateLabel\">Dictate question at:</label>\n            <input\n              type=\"range\"\n              className=\"slider\"\n              onChange={handleSpeechNumber}\n              min=\"0\"\n              max=\"100\"\n              value={dictateAt}\n            ></input>\n            <label className=\"votesLabel\">{dictateAt} votes</label>\n          </div>\n        </div>\n      )}\n\n      <button className=\"leaveButton\" onClick={handleLeaveClick}>\n        Leave\n      </button>\n\n      <div className=\"centre\">\n        <img\n          src={process.env.PUBLIC_URL + \"/participants.png\"}\n          className=\"icon\"\n          alt=\"Alternative Text\"\n        />\n        <img\n          src={process.env.PUBLIC_URL + \"/chat.png\"}\n          className=\"icon\"\n          alt=\"Alternative Text\"\n        />\n        <img\n          src={process.env.PUBLIC_URL + \"/screenshot.png\"}\n          className=\"icon\"\n          alt=\"Alternative Text\"\n        />\n        <img\n          src={process.env.PUBLIC_URL + \"/record.png\"}\n          className=\"icon\"\n          alt=\"Alternative Text\"\n        />\n        <img\n          src={process.env.PUBLIC_URL + \"/reactions.png\"}\n          className=\"icon\"\n          alt=\"Alternative Text\"\n        />\n        <img\n          src={process.env.PUBLIC_URL + \"/more.png\"}\n          className=\"icon\"\n          alt=\"Alternative Text\"\n          onClick={handleMoreClick}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default ToolBar;\n","import \"./HostWindow.css\";\n\nfunction HostWindow() {\n  return (\n    <div className=\"window\">\n      <img\n        src={process.env.PUBLIC_URL + \"/screen.png\"}\n        className=\"screen\"\n        alt=\"Alternative Text\"\n      />\n    </div>\n  );\n}\n\nexport default HostWindow;\n","import { useState, useEffect } from \"react\";\nimport \"./TopQuestions.css\";\nimport \"firebase/firestore\";\nimport { useSpeechSynthesis } from \"react-speech-kit\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes, faVolumeUp } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction TopQuestions(props) {\n  let time = new Date();\n  let db = props.db;\n  let [topQuestions, setTopQuestions] = useState([]);\n  const numOfQuestions = 3;\n  const [lastSpeech, setLastSpeech] = useState(time.getTime() / 1000);\n  const { speak } = useSpeechSynthesis();\n  let view = props.view;\n  let dictateAt = props.dictateAt;\n\n  useEffect(() => {\n    if (db) {\n      const unsub = db\n        .collection(\"message\")\n        .orderBy(\"votes\")\n        .onSnapshot((querySnapshot) => {\n          const data = querySnapshot.docs.map((doc) => ({\n            ...doc.data(),\n            id: doc.id,\n          }));\n          const topThree = data.slice(data.length - numOfQuestions).reverse();\n          setTopQuestions(topThree);\n        });\n      return unsub;\n    }\n  }, [db]);\n\n  useEffect(() => {\n    for (let i = 0; i < Math.min(numOfQuestions, topQuestions.length); i++) {\n      let question = topQuestions[i];\n      const timeDiff = time.getTime() / 1000 - lastSpeech;\n      if (\n        question.votes > dictateAt &&\n        timeDiff > 10 &&\n        question.read === false\n      ) {\n        speak({ text: question.text });\n        setLastSpeech(time.getTime() / 1000);\n        if (db) {\n          db.collection(\"message\").doc(question.id).update({ read: true });\n        }\n        break;\n      }\n    }\n    // eslint-disable-next-line\n  }, [db, dictateAt, lastSpeech, speak, topQuestions]);\n\n  function removeQuestion(id) {\n    if (db) {\n      db.collection(\"message\").doc(id).delete();\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"title\">Top Questions:</div>\n      {topQuestions.map((question, index) => {\n        if (question.votes > 0) {\n          return (\n            <div className=\"question\">\n              <div className=\"questionText\">\n                {index + 1}. {question.text}\n              </div>\n\n              <div className=\"rightContainer\">\n                {question.votes} votes\n                {view === \"host\" && (\n                  <div className=\"hostControls\">\n                    <button\n                      onClick={() => speak({ text: question.text })}\n                      className=\"hostButton\"\n                    >\n                      <i>\n                        <FontAwesomeIcon\n                          icon={faVolumeUp}\n                          className=\"hostIcon\"\n                          color=\"#25D959\"\n                        />\n                      </i>\n                    </button>\n                    <button\n                      onClick={() => removeQuestion(question.id)}\n                      className=\"hostButton\"\n                    >\n                      <i>\n                        <FontAwesomeIcon\n                          icon={faTimes}\n                          className=\"hostIcon\"\n                          color=\"#B32323\"\n                        />\n                      </i>\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n          );\n        } else {\n          return null;\n        }\n      })}\n    </div>\n  );\n}\n\nexport default TopQuestions;\n","import \"./Gallery.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronUp, faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Gallery(props) {\n  const name = props.name;\n  const view = props.view;\n  return (\n    <div className=\"gallerycontainer\">\n      <div className=\"arrow\">\n        <FontAwesomeIcon icon={faChevronDown} className=\"\" />\n      </div>\n      <div className=\"user\"> {view === \"host\" ? props.name : \"Host\"}</div>\n      <div className=\"user\"> {view === \"host\" ? \"Student\" : props.name}</div>\n      <div className=\"user\">Student</div>\n      <div className=\"user\">Student</div>\n      <div className=\"user\">Student</div>\n      <div className=\"arrow bottomArrow\">\n        <FontAwesomeIcon icon={faChevronUp} className=\"\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Gallery;\n","import \"../App/App.css\";\nimport Chat from \"../Chat/Chat\";\nimport ToolBar from \"../ToolBar/ToolBar\";\nimport Window from \"../HostWindow/HostWindow\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport TopQuestions from \"../TopQuestions/TopQuestions\";\nimport { useState } from \"react\";\nimport Gallery from \"../Gallery/Gallery\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyB_dcSrtNM1SoOdbpGK4gyDtfIJs8NQ1Mo\",\n  authDomain: \"zoom-prototype-3c7b3.firebaseapp.com\",\n  projectId: \"zoom-prototype-3c7b3\",\n  storageBucket: \"zoom-prototype-3c7b3.appspot.com\",\n  messagingSenderId: \"829189795036\",\n  appId: \"1:829189795036:web:6ed5d9bd93c293a9ab9819\",\n});\nconst db = firebase.firestore();\n\nfunction StudentApp(props) {\n  const [hideChat, setHideChat] = useState(false);\n  const [dictateAt, setDictateAt] = useState(10);\n\n  return (\n    <div className=\"App\">\n      <Window />\n      <Gallery name={props.name} view={props.view} />\n      <Chat\n        db={db}\n        startingChat=\"questions\"\n        name={props.name}\n        hideChat={hideChat}\n      />\n      <TopQuestions db={db} view={props.view} dictateAt={dictateAt} />\n      <ToolBar\n        hideChat={hideChat}\n        setHideChat={setHideChat}\n        setHome={props.setHome}\n        view={props.view}\n        dictateAt={dictateAt}\n        setDictateAt={setDictateAt}\n      />\n    </div>\n  );\n}\n\nexport default StudentApp;\n","import \"./HomeScreen.css\";\nimport { useState } from \"react\";\n\nimport StudentApp from \"../StudentApp/StudentApp\";\n\nfunction HomeScreen(props) {\n  const [name, setName] = useState(\"\");\n  const [home, setHome] = useState(true);\n  const [view, setView] = useState(\"\");\n\n  function handleViewerButton(event) {\n    setView(event.target.id);\n    setHome(false);\n  }\n\n  function handleDisplayName(event) {\n    setName(event.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      {home && (\n        <div className=\"centreContainer\">\n          <label className=\"label\">Display name: </label>\n          <input\n            className=\"displayName\"\n            type=\"text\"\n            id=\"displayName\"\n            value={name}\n            onChange={handleDisplayName}\n          ></input>\n\n          <label className=\"label\">View as a: </label>\n          <button\n            className=\"homeButton\"\n            id=\"student\"\n            onClick={handleViewerButton}\n          >\n            Student\n          </button>\n          <button className=\"homeButton\" id=\"host\" onClick={handleViewerButton}>\n            Host\n          </button>\n        </div>\n      )}\n\n      {!home && <StudentApp name={name} view={view} setHome={setHome} />}\n    </div>\n  );\n}\n\nexport default HomeScreen;\n","import StudentApp from \"../StudentApp/StudentApp\";\nimport \"../StudentApp/StudentApp\";\nimport HomeScreen from \"../HomeScreen/HomeScreen\";\n\nfunction App() {\n  return (\n    <div>\n      <HomeScreen />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}