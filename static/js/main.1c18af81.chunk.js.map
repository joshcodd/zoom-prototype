{"version":3,"sources":["components/QuestionMessage/QuestionMessage.js","components/GeneralMessage/GeneralMessage.js","components/Chat/Chat.js","components/ToolBar/ToolBar.js","components/HostWindow/HostWindow.js","components/TopQuestions/TopQuestions.js","components/StudentApp/StudentApp.js","components/HomeScreen/HomeScreen.js","components/App/App.js","index.js"],"names":["QuestionMessage","props","timestamp","message","db","date","createdAt","hoursZero","toDate","getHours","minutesZero","getMinutes","toDateString","className","name","text","onClick","id","collection","doc","update","votes","firebase","firestore","FieldValue","increment","icon","faArrowAltCircleUp","color","faArrowAltCircleDown","GeneralMessage","Chat","useState","input","setInput","messages","setMessages","startingChat","chatState","setChatState","setName","removeActiveColours","prevButton","document","getElementById","style","backgroundColor","handleChatChange","state","useEffect","selectedButton","setActiveColours","hideChat","orderBy","onSnapshot","querySnapshot","data","docs","map","onChange","event","target","value","placeholder","cols","rows","add","serverTimestamp","read","type","displayName","ToolBar","showMenu","setShowMenu","view","dictateAt","src","alt","visibility","setHideChat","setDictateAt","min","max","setHome","HostWindow","TopQuestions","time","Date","topQuestions","setTopQuestions","getTime","lastSpeech","setLastSpeech","speak","useSpeechSynthesis","topThree","slice","length","reverse","i","Math","question","timeDiff","index","faVolumeUp","delete","faTimes","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","StudentApp","HomeScreen","home","setView","handleViewerButton","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1c18af81.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"./QuestionMessage.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faArrowAltCircleUp,\n  faArrowAltCircleDown,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction QuestionMessage(props) {\n  const message = props.message;\n  const db = props.db;\n  let timestamp;\n\n  let date = message.createdAt;\n  if (date !== null) {\n    date = date.toDate();\n    const hoursZero = date.getHours() > 9 ? \"\" : \"0\";\n    const minutesZero = date.getMinutes() > 9 ? \"\" : \"0\";\n    timestamp = `${hoursZero}${date.getHours()}:${minutesZero}${date.getMinutes()} ${date.toDateString()}`;\n  }\n\n  function handleVoteUp(id) {\n    if (db) {\n      db.collection(\"message\")\n        .doc(id)\n        .update({ votes: firebase.firestore.FieldValue.increment(1) });\n    }\n  }\n\n  function handleVoteDown(id) {\n    if (db) {\n      db.collection(\"message\")\n        .doc(id)\n        .update({ votes: firebase.firestore.FieldValue.increment(-1) });\n    }\n  }\n\n  return (\n    <li key={message.id} className=\"message\">\n      <div>{message.name}</div>\n      <div>{timestamp}</div>\n      <div className=\"text\">{message.text}</div>\n      <div className=\"arrows\">\n        <button\n          className=\"up button\"\n          onClick={() => handleVoteUp(message.id)}\n          id={message.id}\n        >\n          <i>\n            <FontAwesomeIcon\n              icon={faArrowAltCircleUp}\n              className=\"arrowIcon\"\n              color=\"#25D959\"\n            />\n          </i>\n        </button>\n        <button\n          className=\"up button\"\n          onClick={() => handleVoteDown(message.id)}\n          id={message.id}\n        >\n          <i>\n            <FontAwesomeIcon\n              icon={faArrowAltCircleDown}\n              className=\"arrowIcon\"\n              color=\"#25D959\"\n            />\n          </i>\n        </button>\n        <div className=\"votes\">{message.votes}</div>\n      </div>\n    </li>\n  );\n}\n\nexport default QuestionMessage;\n","import \"./GeneralMessage.css\";\n\nfunction GeneralMessage(props) {\n  const message = props.message;\n  let date = message.createdAt;\n  let timestamp;\n\n  if (date !== null) {\n    date = date.toDate();\n    const hoursZero = date.getHours() > 9 ? \"\" : \"0\";\n    const minutesZero = date.getMinutes() > 9 ? \"\" : \"0\";\n    timestamp = `${hoursZero}${date.getHours()}:${minutesZero}${date.getMinutes()} ${date.toDateString()}`;\n  }\n  return (\n    <li key={message.id} className=\"generalmessage\">\n      <div>{message.name}</div>\n      <div> {timestamp}</div>\n      <div className=\"text\">{message.text}</div>\n    </li>\n  );\n}\n\nexport default GeneralMessage;\n","import \"./Chat.css\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport { useState, useEffect } from \"react\";\nimport QuestionMessage from \"../QuestionMessage/QuestionMessage\";\nimport GeneralMessage from \"../GeneralMessage/GeneralMessage\";\n\nfunction Chat(props) {\n  let db = props.db;\n  let [input, setInput] = useState(\"\");\n  let [messages, setMessages] = useState([]);\n  let [chatState, setChatState] = useState(props.startingChat);\n  let [name, setName] = useState(props.name);\n\n  useEffect(() => {\n    let selectedButton;\n    if (!props.hideChat) {\n      selectedButton = chatState;\n    } else {\n      selectedButton = \"questions\";\n    }\n    setActiveColours(selectedButton);\n  }, [chatState, props.hideChat]);\n\n  useEffect(() => {\n    if (!props.hideChat) {\n      removeActiveColours(\"general\");\n    }\n    setChatState(\"questions\");\n  }, [props.hideChat]);\n\n  useEffect(() => {\n    if (db) {\n      if (chatState === \"questions\") {\n        const unsub = db\n          .collection(\"message\")\n          .orderBy(\"createdAt\")\n          .onSnapshot((querySnapshot) => {\n            const data = querySnapshot.docs.map((doc) => ({\n              ...doc.data(),\n              id: doc.id,\n            }));\n            setMessages(data);\n          });\n        return unsub;\n      } else {\n        const unsub = db\n          .collection(\"general\")\n          .orderBy(\"createdAt\")\n          .onSnapshot((querySnapshot) => {\n            const data = querySnapshot.docs.map((doc) => ({\n              ...doc.data(),\n              id: doc.id,\n            }));\n            setMessages(data);\n          });\n        return unsub;\n      }\n    }\n  }, [db, chatState]);\n\n  function handleAnonymousClick(event) {\n    let displayName;\n    if (event.target.value === props.name) {\n      displayName = \"Anonymous\";\n    } else {\n      displayName = props.name;\n    }\n    setName(displayName);\n  }\n\n  function handleMessageChange(event) {\n    let message = event.target.value;\n    setInput(message);\n  }\n\n  function setActiveColours(id) {\n    const selectedButton = document.getElementById(id).style;\n    selectedButton.backgroundColor = \"white\";\n    selectedButton.color = \"black\";\n  }\n\n  function removeActiveColours(id) {\n    const prevButton = document.getElementById(id).style;\n    prevButton.backgroundColor = \"#161616\";\n    prevButton.color = \"white\";\n  }\n\n  function handleSubmit() {\n    if (db) {\n      if (chatState === \"questions\") {\n        db.collection(\"message\").add({\n          createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n          text: input,\n          votes: 0,\n          name: name,\n          read: false,\n        });\n      } else {\n        db.collection(\"general\").add({\n          createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n          text: input,\n          name: name,\n        });\n      }\n    }\n    setInput(\"\");\n  }\n\n  function handleChatChange(state) {\n    const prevState = chatState;\n    removeActiveColours(prevState);\n    setChatState(state);\n  }\n\n  return (\n    <div className=\"chat\">\n      {props.hideChat ? (\n        <div className=\"splitButton\">\n          <button id=\"questions\" className=\"singleButton\">\n            Questions\n          </button>\n        </div>\n      ) : (\n        <div className=\"splitButton\">\n          <button\n            className=\"leftButton\"\n            id=\"general\"\n            onClick={() => handleChatChange(\"general\")}\n          >\n            General\n          </button>\n          <button\n            className=\"rightButton\"\n            id=\"questions\"\n            onClick={() => handleChatChange(\"questions\")}\n          >\n            Questions\n          </button>\n        </div>\n      )}\n\n      <div className=\"messages\">\n        <ul className=\"message-list\">\n          {messages.map((message) => {\n            if (chatState === \"questions\") {\n              return <QuestionMessage message={message} db={db} />;\n            } else {\n              return <GeneralMessage message={message} />;\n            }\n          })}\n        </ul>\n      </div>\n\n      <div className=\"inputArea\">\n        <textarea\n          onChange={handleMessageChange}\n          placeholder=\"Type your message here...\"\n          className=\"input\"\n          name=\"inputArea\"\n          cols=\"48\"\n          rows=\"2\"\n          value={input}\n        ></textarea>\n\n        <div className=\"inputdialog\">\n          <button className=\"sendButton\" onClick={handleSubmit}>\n            Send\n          </button>\n          {chatState === \"questions\" && (\n            <div className=\"isAnonymous\">\n              <input\n                className=\"checkbox\"\n                type=\"checkbox\"\n                id=\"anonymous\"\n                value={name}\n                onClick={handleAnonymousClick}\n              />\n              <label>Post anonymously?</label>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n","import { useState } from \"react\";\nimport \"./ToolBar.css\";\n\nfunction ToolBar(props) {\n  const [showMenu, setShowMenu] = useState(false);\n  let view = props.view;\n  let dictateAt = props.dictateAt;\n\n  function handleMoreClick() {\n    setShowMenu(!showMenu);\n  }\n\n  function handleChatHideClick() {\n    props.setHideChat(!props.hideChat);\n  }\n\n  function handleLeaveClick() {\n    props.setHome(true);\n  }\n\n  function handleSpeechNumber(event) {\n    props.setDictateAt(event.target.value);\n  }\n\n  return (\n    <div className=\"toolbar\">\n      <img src=\"mute.png\" className=\"icon left\" alt=\"Alternative Text\" />\n      <img src=\"video.png\" className=\"icon left\" alt=\"Alternative Text\" />\n\n      {view === \"student\" && (\n        <div\n          className=\"menuDialog centre\"\n          style={{ visibility: showMenu ? \"visible\" : \"hidden\" }}\n        >\n          <div className=\"settings\">\n            <button className=\"chatStateButton\" onClick={handleChatHideClick}>\n              Turn chat {props.hideChat ? \"on\" : \"off\"}.\n            </button>\n          </div>\n        </div>\n      )}\n\n      {view === \"host\" && (\n        <div\n          className=\"hostMenuDialog centre\"\n          style={{ visibility: showMenu ? \"visible\" : \"hidden\" }}\n        >\n          <div className=\"hostSettings\">\n            <label className=\"dictateLabel\">Dictate question at:</label>\n            <input\n              type=\"range\"\n              className=\"slider\"\n              onChange={handleSpeechNumber}\n              min=\"0\"\n              max=\"100\"\n              value={dictateAt}\n            ></input>\n            <label className=\"votesLabel\">{dictateAt} votes</label>\n          </div>\n        </div>\n      )}\n\n      <button className=\"leaveButton\" onClick={handleLeaveClick}>\n        Leave\n      </button>\n\n      <div className=\"centre\">\n        <img src=\"participants.png\" className=\"icon\" alt=\"Alternative Text\" />\n        <img src=\"chat.png\" className=\"icon\" alt=\"Alternative Text\" />\n        <img src=\"screenshot.png\" className=\"icon\" alt=\"Alternative Text\" />\n        <img src=\"record.png\" className=\"icon\" alt=\"Alternative Text\" />\n        <img src=\"reactions.png\" className=\"icon\" alt=\"Alternative Text\" />\n        <img\n          src=\"more.png\"\n          className=\"icon\"\n          alt=\"Alternative Text\"\n          onClick={handleMoreClick}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default ToolBar;\n","import \"./HostWindow.css\";\n\nfunction HostWindow() {\n  return (\n    <div className=\"window\">\n      <img src=\"screen.png\" className=\"screen\" alt=\"Alternative Text\" />\n    </div>\n  );\n}\n\nexport default HostWindow;\n","import { useState, useEffect } from \"react\";\nimport \"./TopQuestions.css\";\nimport \"firebase/firestore\";\nimport { useSpeechSynthesis } from \"react-speech-kit\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes, faVolumeUp } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction TopQuestions(props) {\n  let time = new Date();\n  let db = props.db;\n  let [topQuestions, setTopQuestions] = useState([]);\n  const numOfQuestions = 3;\n  const [lastSpeech, setLastSpeech] = useState(time.getTime() / 1000);\n  const { speak } = useSpeechSynthesis();\n  let view = props.view;\n  let dictateAt = props.dictateAt;\n\n  useEffect(() => {\n    if (db) {\n      const unsub = db\n        .collection(\"message\")\n        .orderBy(\"votes\")\n        .onSnapshot((querySnapshot) => {\n          const data = querySnapshot.docs.map((doc) => ({\n            ...doc.data(),\n            id: doc.id,\n          }));\n          const topThree = data.slice(data.length - numOfQuestions).reverse();\n          setTopQuestions(topThree);\n        });\n      return unsub;\n    }\n  }, [db]);\n\n  useEffect(() => {\n    for (let i = 0; i < Math.min(numOfQuestions, topQuestions.length); i++) {\n      let question = topQuestions[i];\n      const timeDiff = time.getTime() / 1000 - lastSpeech;\n      if (\n        question.votes > dictateAt &&\n        timeDiff > 10 &&\n        question.read === false\n      ) {\n        speak({ text: question.text });\n        setLastSpeech(time.getTime() / 1000);\n        if (db) {\n          db.collection(\"message\").doc(question.id).update({ read: true });\n        }\n        break;\n      }\n    }\n    // eslint-disable-next-line\n  }, [db, dictateAt, lastSpeech, speak, topQuestions]);\n\n  function removeQuestion(id) {\n    if (db) {\n      db.collection(\"message\").doc(id).delete();\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"title\">Top Questions:</div>\n      {topQuestions.map((question, index) => {\n        if (question.votes > 0) {\n          return (\n            <div className=\"question\">\n              {index + 1}. {question.text}\n              {view === \"host\" && (\n                <div className=\"hostControls\">\n                  <button\n                    onClick={() => speak({ text: question.text })}\n                    className=\"hostButton\"\n                  >\n                    <i>\n                      <FontAwesomeIcon\n                        icon={faVolumeUp}\n                        className=\"hostIcon\"\n                        color=\"#25D959\"\n                      />\n                    </i>\n                  </button>\n                  <button\n                    onClick={() => removeQuestion(question.id)}\n                    className=\"hostButton\"\n                  >\n                    <i>\n                      <FontAwesomeIcon\n                        icon={faTimes}\n                        className=\"hostIcon\"\n                        color=\"#B32323\"\n                      />\n                    </i>\n                  </button>\n                </div>\n              )}\n              <span className=\"votecount\">{question.votes} votes</span>\n            </div>\n          );\n        } else {\n          return null;\n        }\n      })}\n    </div>\n  );\n}\n\nexport default TopQuestions;\n","import \"../App/App.css\";\nimport Chat from \"../Chat/Chat\";\nimport ToolBar from \"../ToolBar/ToolBar\";\nimport Window from \"../HostWindow/HostWindow\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport TopQuestions from \"../TopQuestions/TopQuestions\";\nimport { useState } from \"react\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyB_dcSrtNM1SoOdbpGK4gyDtfIJs8NQ1Mo\",\n  authDomain: \"zoom-prototype-3c7b3.firebaseapp.com\",\n  projectId: \"zoom-prototype-3c7b3\",\n  storageBucket: \"zoom-prototype-3c7b3.appspot.com\",\n  messagingSenderId: \"829189795036\",\n  appId: \"1:829189795036:web:6ed5d9bd93c293a9ab9819\",\n});\nconst db = firebase.firestore();\n\nfunction StudentApp(props) {\n  const [hideChat, setHideChat] = useState(false);\n  const [dictateAt, setDictateAt] = useState(10);\n\n  return (\n    <div className=\"App\">\n      <Window />\n      <Chat\n        db={db}\n        startingChat=\"questions\"\n        name={props.name}\n        hideChat={hideChat}\n      />\n      <TopQuestions db={db} view={props.view} dictateAt={dictateAt} />\n      <ToolBar\n        hideChat={hideChat}\n        setHideChat={setHideChat}\n        setHome={props.setHome}\n        view={props.view}\n        dictateAt={dictateAt}\n        setDictateAt={setDictateAt}\n      />\n    </div>\n  );\n}\n\nexport default StudentApp;\n","import \"./HomeScreen.css\";\nimport { useState } from \"react\";\n\nimport StudentApp from \"../StudentApp/StudentApp\";\n\nfunction HomeScreen(props) {\n  const [name, setName] = useState(\"\");\n  const [home, setHome] = useState(true);\n  const [view, setView] = useState(\"\");\n\n  function handleViewerButton(event) {\n    setView(event.target.id);\n    setHome(false);\n  }\n\n  function handleDisplayName(event) {\n    setName(event.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      {home && (\n        <div className=\"centreContainer\">\n          <label className=\"label\">Display name: </label>\n          <input\n            className=\"displayName\"\n            type=\"text\"\n            id=\"displayName\"\n            value={name}\n            onChange={handleDisplayName}\n          ></input>\n\n          <label className=\"label\">View as a: </label>\n          <button\n            className=\"homeButton\"\n            id=\"student\"\n            onClick={handleViewerButton}\n          >\n            Student\n          </button>\n          <button className=\"homeButton\" id=\"host\" onClick={handleViewerButton}>\n            Host\n          </button>\n        </div>\n      )}\n\n      {!home && <StudentApp name={name} view={view} setHome={setHome} />}\n    </div>\n  );\n}\n\nexport default HomeScreen;\n","import StudentApp from \"../StudentApp/StudentApp\";\nimport \"../StudentApp/StudentApp\";\nimport HomeScreen from \"../HomeScreen/HomeScreen\";\n\nfunction App() {\n  return (\n    <div>\n      <HomeScreen />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}